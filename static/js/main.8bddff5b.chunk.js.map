{"version":3,"sources":["Explorer.js","App.js","serviceWorker.js","index.js"],"names":["labels","plabel","n","i","console","log","Explorer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onMouseMove","e","setState","mx","pageX","my","pageY","calculateHulls","nodes","delanuyPoints","hulls","forEach","d","push","x","y","undefined","cluster","polygons","d3","extent","arrHulls","key","hasOwnProperty","arr","h","hull","readInState","state","parse","saved_state","initColorScale","setLinkScales","links","startForce","_ref","data","comp","assertThisInitialized","forceCollide","radius","scaledDown","iterations","force","collide","forceCluster","strength","forceManyBody","id","distance","weight","forceXY","stop","initializeForce","_this$state","_this$calculateHulls","voronoi_polygons","tick","on","_this$calculateHulls2","alpha","node","_this$state2","clusters","forceConstant","length","k","vx","vy","linkFilter","source","target","map","nodemap","edgeThresh","linkFilterBefore","resetColors","classed","updateForce","type","oglinks","filter","range","restart","colors","reverse","concat","toConsumableArray","brighter","toString","color","domain","groupAmount","handleDelete","item","selected","splice","indexOf","setMustTags","handleSliderThresh","event","value","handleSliderForceXY","handleSliderConstant","handleSliderDistance","handleCollide","handleSliderStrength","handleSliderforceManyBody","mouseEnter","div","style","mouseMove","text","label","mouseExit","focus","codeExample","activate","linktext","transition","each","me","attr","count","size","invert","clickdiv","html","Math","round","join","raise","deactivate","developerMode","ognodes","edges","nodeFilterThresh","select","_this2","lines","react_default","a","createElement","className","href","onClick","ref","width","height","transform","pointerEvents","opacity","lib","textAlign","nx","ny","title","titleSize","titleColor","orientation","align","lineType","wrap","padding","stroke","link","index","x1","y1","x2","y2","strokeOpacity","group","strokeWidth","onMouseEnter","onMouseOut","datalabel","r","cx","cy","fill","cluster_count","xlinkHref","Typography_default","Slider_default","min","aria-labelledby","max","step","onChange","Checkbox_default","checked","Component","App","src_Explorer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8bddff5b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Slider from '@material-ui/lab/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import './viz.css';\n\nimport './robert.css';\n\n\nimport saved_state from './data/savedstate.json';\n\n\nimport { Annotation,Note } from 'react-annotation'\n//Force\n// import nodes from './data/force_directed_nodes_all.csv';\n// import edges from './data/force_directed_edges_all.csv';\n\n\n\n// import netClustering from './netClustering.js';\n// import fileDownload from 'js-file-download';\n\n\nimport {parse} from 'flatted/esm';\n\n\n\n\nimport * as d3 from 'd3';\n\nconst label = ( title, content) => {\n    return {title,content}\n}\n\n\nconst labels = {}\n\nconst plabel = (n,i) => {\n    labels[i] = n;\n}\n\nplabel(\"Python\",28)\nplabel('C++',5)\nplabel('Windows',6)\nplabel('OS / Scripting',26)\nplabel('Version Control / SSH',25)\nplabel('CSS',10)\n// plabel('Java Testing',13)\nplabel('Web App Protocols',20)\nplabel('Javascript / Web', 8)\nplabel('OOP',0)\nplabel('Node.js',24)\nplabel('Angular / Mobile',22)\nplabel('Android',19)\nplabel('PHP',11)\nplabel('Java',17)\nplabel('C / Programming',1)\nplabel('Events / Go', 3)\nplabel('C#', 15)\nplabel('Math / Algorithms', 27)\n\nconsole.log(labels,\"LABELS\")\n\nclass Explorer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            selected: [],\n          \n            links: props.links,\n            oglinks: props.links,\n            ognodes: props.nodes,\n            nodes: props.nodes,\n            data:[],\n            edges: [],\n            nodemap: {},\n            forceConstant: 1,\n            collide: true,\n            edgeThresh: 25,\n            nodeFilterThresh: 50000,\n            forceXY: .4,\n            forceManyBody: -150,\n            distance: 25,\n            strength:.2,\n            groupAmount: 10,\n            mx: 0,\n            focus: null,\n            my:0,\n            developerMode: false,\n\n        }\n\n\n    }\n    _onMouseMove = (e) => {\n        this.setState({ mx: e.pageX, my: e.pageY });\n      }\n\n    calculateHulls = (nodes) => {\n        var delanuyPoints = []\n        var hulls = {};\n        nodes.forEach(d => {\n            delanuyPoints.push([d.x,d.y])\n            if(hulls[d.cluster] === undefined){\n                hulls[d.cluster] = [];\n            }\n            hulls[d.cluster].push({x:d.x, y:d.y });\n        })\n        var voronoi = d3.voronoi().extent([[-400, -400], [400 + 1, 400 + 1]]);\n        var polygons = voronoi.polygons(delanuyPoints);\n        var arrHulls = [];\n        for (var key in hulls){\n            if(!hulls.hasOwnProperty(key)) continue;\n            var arr = hulls[key];\n            var h = d3.polygonHull(arr)\n            //Might need to change this, something is wrong with hulls color\n            // if(h !== null)\n            arrHulls.push({hull: h, cluster: key });       \n        }\n        \n\n        return {arrHulls, polygons}\n\n    }\n\n//     loadStatic = () => {\n//         var colors = d3.schemeSet3.reverse()\n\n//         colors.forEach(d => d.brighter(20))\n\n//         this.color = d3.scaleOrdinal(colors)\n//         this.size = d3.scaleSqrt()\n//             .domain([30000, 7874521])\n//             .range([3, 30]);\n\n\n//         var {arrHulls,polygons} = this.calculateHulls(nodes_static)\n\n//         this.setState({hulls: arrHulls});\n//         this.setState({voronoi_polygons: polygons})\n//         this.setState({data:nodes_static})\n//         this.setState({links:edges_static})\n\n//   }  \n\n  componentDidMount() {\n\n    this.size = d3.scaleSqrt()\n    .domain([30000, 7874521])\n    .range([3, 30]);\n\n    // this.loadNodes()\n    // .then(this.loadEdges)\n    // .then(this.initializeForce);\n\n    this.readInState()\n\n\n    this.div = d3.select(\"#explorer\")\n        .select(\"#titletooltup\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"display\", \"none\");\n\n    this.clickdiv = d3.select(\"#contenttooltip\")\n        .attr(\"class\", \"nodetooltip\")\n        .style(\"display\", \"none\");\n\n  }\n\n  readInState = () => {\n\n    // console.log(saved_state)\n    var state = parse(((saved_state)))\n\n    this.initColorScale()\n    this.setLinkScales(state.links)\n\n    this.setState(state)\n\n    this.startForce(state)\n\n\n  }\n\n  \n\n  componentWillUnmount() {\n    if(this.force)\n        this.force.stop();\n  }\n\n  \n  startForce = ({data,links}) => {\n\n    var comp = this;\n\n     this.forceCollide = d3.forceCollide()\n        // .radius((d) => {return (d.radius + 1 )})\n        .radius((d) => {return this.scaledDown(d.radius + 3 )})\n        .iterations(1); \n    \n\n    this.force =  d3.forceSimulation()\n        .nodes(data)\n        .force(\"center\",d3.forceCenter(0,0))\n        .force(\"collide\", this.state.collide ?  this.forceCollide : null)\n        .force(\"cluster\", this.forceCluster)\n        .force(\"gravity\", d3.forceManyBody().strength(this.state.forceManyBody))\n        .force(\"link\", d3.forceLink(links).id(function(d) { return d.id; })\n        .distance(function(d){return comp.distance(d.weight)})\n        .strength(function(d){return comp.strength(d.weight)})\n        .iterations(1))\n        .force(\"x\", d3.forceX().strength(this.state.forceXY))\n        .force(\"y\", d3.forceY().strength(this.state.forceXY))\n\n\n      this.force.stop()\n\n\n\n  }\n\n  initializeForce = () => {\n\n\n    // var data = this.state.data;\n    // var links = this.state.links;\n    // var clusters = this.state.clusters;\n\n    // console.log(clusters,\"Clusters\");\n\n\n    var comp = this;\n\n        // netClustering.cluster(data, links, \"cluster\", \"weight\"); \n    \n        // var cluster_count = {};\n        // data.forEach(n => {\n        //   if(!cluster_count[n.cluster]) cluster_count[n.cluster] = 1;\n        //   else cluster_count[n.cluster] += 1\n\n        //   if (!clusters[n.cluster] || (n.radius > clusters[n.cluster].radius)){\n        //       clusters[n.cluster] = n\n        //   };\n        // })\n\n\n        // for( var i =0; i< 100; i++) comp.force.tick(100);\n\n        var {links,data} = this.state\n\n\n        var {arrHulls,polygons} = this.calculateHulls(data)\n        comp.setState({data,links,hulls:arrHulls,voronoi_polygons: polygons})\n\n        var tick = 0;\n        this.force.on(\"tick\", () => {\n\n            if(tick === 1){\n                var {arrHulls,polygons} = this.calculateHulls(data)\n                comp.setState({data,links,hulls:arrHulls,voronoi_polygons: polygons})\n                tick = 0\n\n            }\n            tick +=1\n        \n        });\n\n\n\n    \n\n  }\n\n    forceCluster = (alpha) => {\n        var {clusters,forceConstant, data} = this.state\n        for (var i = 0, n = data.length, node, cluster, k = alpha * 1; i < n; ++i) {\n            node = data[i];\n            cluster = clusters[node.cluster];\n            node.vx -= ((node.x - cluster.x) * k)/forceConstant;\n            node.vy -= ((node.y - cluster.y) * k)/forceConstant;    \n            }\n    }   \n\n  linkFilter = (d) => {\n    var map = this.state.nodemap;\n    var source,target;\n    if (typeof(d.source) === 'object'){\n        source = d.source.id;\n        target = d.target.id;\n    } else {\n        source = d.source;\n        target = d.target\n    }\n\n    \n    return (map[source] !== undefined\n            && map[target] !== undefined\n            && d.weight > this.state.edgeThresh)\n    \n\n  }\n\n  linkFilterBefore = (d) => {\n    var map = this.state.nodemap;\n\n    return (map[d.source] !== undefined\n        && map[d.target] !== undefined\n          && d.weight > this.state.edgeThresh)\n  \n\n  }\n\n  resetColors = () => {\n    d3.selectAll(\".node\").classed(\"fill-black\",false);\n    d3.selectAll(\".link\").classed(\"stroke-grey\",false);\n  }\n\n  updateForce = (type) => {\n\n    // this.resetColors();\n\n    this.initializeForce()\n\n    var newLinks;\n    if(type ==='thresh'){\n        newLinks = this.state.oglinks.filter(this.linkFilter);\n    } else if(type === 'strength') {\n       this.strength.range([0,this.state.strength]);\n    } else if(type === 'distance') {\n        this.distance.range([this.state.distance, 0]);\n    } else if(type === 'forceConstant') {\n        this.force.force(\"cluster\", this.forceCluster)\n    } else if(type === 'collide') {\n        if(!this.state.collide)\n            this.force.force(\"collide\",this.forceCollide)\n        else\n            this.force.force(\"collide\", null)\n    }else if( type=== 'forceXY'){\n        this.force.force(\"x\", d3.forceX().strength(this.state.forceXY))\n        .force(\"y\", d3.forceY().strength(this.state.forceXY))\n\n    }else if(type === 'forceManyBody'){\n        this.force.force('gravity', d3.forceManyBody().strength(this.state.forceManyBody))\n    }\n\n\n    this.force.restart();\n    this.force.alpha(.5);\n\n\n    \n    var {links} = this.state\n    var comp = this;\n\n    this.force.force(\"link\", \n    d3.forceLink(links).id(function(d) { return d.id; })\n    .distance(function(d){return comp.distance(d.weight)})\n    .strength(function(d){return comp.strength(d.weight)})\n    .iterations(100))\n\n\n\n  }\n\n  initColorScale = () => {\n    var colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#bcbd22\", \"#17becf\"].reverse()\n    colors = [...colors.reverse(), ...colors.map(d => d3.hsl(d).brighter(.8).toString()).reverse(),  ...colors.map(d => d3.hsl(d).brighter(1.3).toString())]\n\n\n    console.log(colors)\n    this.color = d3.scaleOrdinal(colors)\n    .domain([0,this.state.groupAmount]);\n  }\n\n//   loadNodes = () => {\n\n// // current group labels are for nodeThresh = 500000\n\n//     var comp = this;\n//     return new Promise(function (resolve, reject){\n       \n//         comp.initColorScale()\n\n//         d3.csv(nodes).then(function(olddata) {\n//         var size = d3.scaleSqrt()\n//         .domain([30000, 7874521])\n//         .range([5, 30]);\n//             var data = []\n//             var clusters = [];\n//             var map = {}\n\n//             var node_count = {}\n//             olddata.forEach((d,i) => {\n//                 var n = {}\n//                 n.group = +d.Group;\n//                 n.fill = comp.color(+d.Group);\n//                 n.radius = size(+d.Occurances);\n//                 n.id = +d.Id\n//                 n.label = d.Label\n//                 n.links = [];\n        \n//                 if(n.group < comp.state.groupAmount && n.radius > size(comp.state.nodeFilterThresh)){\n//                     data.push(n);\n\n//                     map[n.id] = n;\n//                     if (!clusters[n.group] || (n.radius > clusters[n.group].radius)) clusters[n.group] = n;\n//                 }\n//             })  \n//             resolve({data,nodemap:map, clusters})\n//             // comp.setState({data:data,nodemap:map, clusters: clusters});\n//         });\n//     })\n\n//   }\n\n  setLinkScales = (links) => {\n\n    var comp = this;\n    var domain =  d3.extent(links, d=> +d.weight)\n    comp.distance = d3.scaleSqrt().domain(domain).range([comp.state.distance, 0]);\n    comp.strength = d3.scaleLinear().domain(domain).range([0,comp.state.strength]);  \n    \n\n  }\n\n//   loadEdges = ({data,nodemap, clusters}) => {\n\n\n//     var size = d3.scaleSqrt()\n//     .domain([10, 200])\n//     .range([2, 2]);\n\n//     var opacity = d3.scaleLinear()\n//     .domain([10, 200])\n//     .range([0, .5]);\n\n//     var comp = this;\n//     return new Promise(function (resolve, reject){ \n\n//          d3.csv(edges).then(function(new_links){\n//             var links = [];\n//             var map = nodemap;\n\n  \n//             this.setLinkScales(new_links)\n\n\n//             // new_links = new_links.filter(d => +d.Weight > comp.state.edgeThresh)\n\n//              new_links.forEach(d => {  \n//                  var n = {}  \n//                  n.source = +d.Source;\n//                  n.target = +d.Target;\n//                  n.weight = +d.Weight;\n//                  n.strokeWidth = size(n.weight);\n//                  n.opacity = opacity(n.weight);\n//                  if(map[n.source])\n//                      map[n.source].links.push(n);\n//                  if(map[n.target])\n//                      map[n.target].links.push(n);\n                 \n//                  if(map[n.target] && map[n.source])\n//                  links.push(n);\n//              })\n//              console.log(links,\"links\")\n//              console.log(map);\n//              resolve({data,links,nodemap,clusters})\n//              comp.setState({oglinks: links,nodemap,clusters})\n//          });\n//     } )\n   \n    \n//   }\n\n\n  handleDelete = item => () => {\n    this.setState(state => {\n      const selected = [...state.selected];\n      selected.splice(selected.indexOf(item), 1);\n\n      this.props.setMustTags(selected);\n      return { selected };\n    });\n  };\n\n  handleSliderThresh = (event, value) => {\n    this.setState({ edgeThresh:value });\n    this.updateForce('thresh')\n  };\n\n  handleSliderForceXY = (event, value) => {\n    this.setState({ forceXY: value });\n    this.updateForce('forceXY')\n  };\n\n  handleSliderConstant = (event, value) => {\n    this.setState({ forceConstant:value });\n    this.updateForce('forceConstant')\n  };\n\n  handleSliderDistance = (event, value) => {\n    this.setState({ distance:value });\n    this.updateForce('distance')\n  };\n  handleCollide = (event, value) => {\n    this.setState({ collide: value });\n    this.updateForce('collide')\n  };\n\n  handleSliderStrength = (event, value) => {\n    this.setState({ strength:value });\n    this.updateForce('strength')\n  };\n\n  handleSliderforceManyBody = (event,value) => {\n    this.setState({forceManyBody: value})\n    this.updateForce('forceManyBody')\n  }\n\n\n  mouseEnter = (node) => {\n    d3.select(\".i\" +node.id).classed(\"active\",true);\n\n    this.div\n        .style(\"display\", \"inline\")\n \n    }\n\n    mouseMove = (node) => {\n       this.div.text(node.label)\n            .style(\"left\", this.state.mx + \"px\")\n            .style(\"top\",this.state.my - 30 + \"px\");\n        }\n\n    mouseExit = (node) => {\n        d3.select(\".i\" +node.id).classed(\"active\",false);\n        this.div.style(\"display\", \"none\");\n        if(this.state.focus === null)\n            this.setState({codeExample: null})\n    }\n\n    activate = (node) => {\n        var linktext = [];\n        d3.selectAll(\".node\").classed(\"fill-black\",true);\n \n        // Performance issues\n        // d3.selectAll(\".link\").classed(\"stroke-grey\",true);\n\n        var comp = this;\n\n        d3.selectAll(\".n\" +node.cluster).classed(\"fill-black\",false);\n        d3.selectAll(\".n\" +node.cluster).classed(\"stroke-grey\",false);\n\n        d3.select(\".annotation\"+node.cluster).transition().style(\"opacity\",'1')\n\n        d3.selectAll(\".n\" +node.cluster).each(function(d){\n            var me = d3.select(this)\n            linktext.push({label: me.attr(\"datalabel\"), count: comp.size.invert(me.attr('r')) });\n        })\n       \n        // console.log(node)\n\n\n        this.clickdiv\n        .html('<h1 class=\"title\">Tag: ' + node.label  + '<br/>Occurrences: ' + d3.format(\".2s\")(Math.round(this.size.invert(node.radius)))+'</h1><h4>Tag cluster (most to least common): </h4>\\\n        <p class=\"body-text\">' + linktext.map(d => d.label).join(\", \") + '</p>')\n        .style(\"display\", \"inline\");\n\n        // if(this.state.focus !== null){\n            // autoComplete(node.id).then(d => {\n            //     var info = JSON.parse(d);\n            //     this.setState({codeExample: info.example})\n            // });   \n            d3.select(\".i\" + this.state.focus).classed(\"selected\",false);\n        // }\n        d3.select(\".i\" + node.id).classed(\"selected\",true).raise();\n        this.setState({focus: node.id});\n    }\n\n    deactivate = (node) => {\n        d3.selectAll(\".node\").classed(\"fill-black\",false);\n       // d3.selectAll(\".link\").classed(\"stroke-grey\",false);\n        d3.select(\".annotation\"+node.cluster).transition().style(\"opacity\",'0')\n\n        this.clickdiv.style(\"display\",\"none\");\n        d3.select(\".i\" + this.state.focus).classed(\"selected\",false);\n        this.setState({focus: null,codeExample:null})\n\n    }\n\n\n\n//     downloadState = () => {\n//         fileDownload(JSON.stringify(stringify(this.state)),'savedstate.json')\n//     }\n\n//     downloadNodes = () => {\n\n//     var nodes = JSON.stringify(this.state.data.map( (d)=>{\n//         return {id:d.id,\n//                 radius: d.radius,\n//                 x: d.x, y: d.y,\n//                 cluster: d.cluster,\n//                 label: d.label\n//                 }\n//     }))\n\n//     fileDownload(nodes, 'nodes.json');\n// }\n\n// downloadEdges = () => {\n//     var edges = JSON.stringify(this.state.links.map( (link)=>{\n//         return {source: {x: link.source.x, y: link.source.y, group: link.source.group, id: link.source.id,  label: link.source.label},\n//                 target: {x: link.target.x, y: link.target.y, group: link.target.group, id: link.target.id, label: link.target.label},\n//                 strokeWidth: link.strokeWidth\n//                 }\n//     }))\n\n//     fileDownload(edges, 'edges.json');\n\n// }\n\ndeveloperMode = () => {\n    this.setState((state) => ({developerMode: !state.developerMode} ))\n}\n  \n\n  render() {\n    var lines = d3.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\n\n\n    this.scaledDown = d3.scaleLinear()\n                    .domain([3,30])\n                    .range([5,15])\n\n\n    const transformString = \"translate(350,320) scale(.8)\"\n\n    return (\n      <div id=\"explorer\" \n    //   onMouseMove={this._onMouseMove}\n      >\n\n            <h3 className=\"header-title\"> Stack Overflow Relationship Network</h3>\n            <h6 className=\"header-subtitle\">  Each node is a Stack Overflow tag. The clusters were formed using this <a className=\"good-link\" href=\"http://scaledinnovation.com/analytics/communities/communities.html\">community detection</a> algorithm. <br/> \nHover for tag occurrences and node cluster. Tags are sized by occurrences. Darker links reflect a higher co-use in posts.</h6>\n \n       \n\n            <a href=\"#\" className=\"dev-mode good-link\" onClick={this.developerMode}>{!this.state.developerMode ? \"Development Mode\" : \"Production Mode (scroll down)\"}</a>\n            <div className=\"flexbox-container\">\n           <svg ref={node => this.node = node}\n            width={700} height={700}>\n            <g>\n  \n                <g transform={transformString} >\n                {this.state.hulls && this.state.hulls.map((hull,i) => (\n                    hull.hull !== null && hull.hull.length > 6 &&\n                    (<g key={i} style={{pointerEvents:'none'}} >    \n                \n                    \n                    <g className={'annotation' + hull.cluster}\n                        id={'annotation' + hull.cluster}\n                        style={{opacity:'0'}}>   \n                    <Annotation   \n                        style={{textAlign:\"left\"}}                \n                        x={hull.hull[hull.hull.length/2].x}\n                        y={hull.hull[hull.hull.length/2].y}\n                        nx={-400}\n                        ny={-360}\n                        title={labels[hull.cluster] ? labels[hull.cluster] : \"\"}\n                    >\n                    \n                 \n                        <Note titleSize={'2em'} titleColor={this.color(i)} orientation=\"leftRight\" align=\"left\" lineType=\"horizontal\" wrap={460} padding={10} />\n                    </Annotation>\n                    </g>  \n\n                    <path key={i} className={hull.cluster + \" clusterhull\"} stroke={this.color(i)} d={lines(hull.hull) + \"Z\"}/>\n                    </g>)\n                ))}\n\n\n\n\n           \n\n\n                </g>\n                <g transform={transformString}>\n                {this.state.links && this.state.links.map((link, index) =>(\n                <line\n                    className={\"link\"}\n                    x1={link.source.x}\n                    y1={link.source.y}\n                    x2={link.target.x}\n                    y2={link.target.y}\n                    strokeOpacity={link.opacity}\n                    key={`line-${index}`}\n                    stroke={this.color(link.source.group)} \n                    strokeWidth={link.strokeWidth} />\n                ))}  \n                {this.state.data && this.state.data.map((node, index) =>(\n                    \n                    (<g \n                        onMouseEnter={() => {this.activate(node)}} \n                        // onClick={() => this.nodeClick(node)}\n                        onMouseOut={() => this.deactivate(node)}\n                        datalabel={node.label}\n                        key={index}>\n                                \n                    <circle \n                        className={'node ' + 'n'+node.cluster + ' i'+ node.id + ' vindex' + index}\n                        // r={(node.radius)} \n                        r={this.scaledDown(node.radius)} \n                        cx={node.x} cy={node.y} \n                        // fill={node.fill} \n                        fill={this.state.cluster_count[node.cluster] > 4 ? this.color(node.cluster) : 'whitesmoke'} \n                        style={{pointerEvents:'none'}}\n                        datalabel={node.label}\n                    />\n                    <path className={\"v\" + index} style={{opacity:0}} d={this.state.voronoi_polygons[index] ? \"M\" + this.state.voronoi_polygons[index].join(\"L\") + \"Z\" :null}/> \n\n                    </g>)\n                ))}\n\n\n                 {this.state.hulls && this.state.hulls.map((hull,i) => (\n                    hull.hull !== null && hull.hull.length > 6 && (<use key={i} style={{pointerEvents: 'none'}} xlinkHref={\"#annotation\" + hull.cluster}/> )  )) }\n\n                </g>\n            </g> \n\n            \n\n            </svg>\n\n            <div id=\"contenttooltip\">\n\n            </div>\n\n            {/* End of flexBox container */}\n            </div>\n            {this.state.developerMode && <div className=\"controllers\">\n            <Typography id=\"strength\">Maximum Link strength: {this.state.strength}</Typography>\n            <Slider\n            value={this.state.strength}\n            min={0}\n            aria-labelledby=\"strength\"\n            max={5}\n            step={.1}\n            onChange={this.handleSliderStrength}\n            />\n            <Typography id=\"distance\">Maximum Link Distance: {this.state.distance}</Typography>\n            <Slider\n            value={this.state.distance}\n            min={0}\n            aria-labelledby=\"distance\"\n            max={300}\n            step={10}\n            onChange={this.handleSliderDistance}\n            />\n            <Typography id=\"forceConstant\">Force Cluster (attractive force of clusters): {this.state.forceConstant}</Typography>\n            <Slider\n            value={this.state.forceConstant}\n            min={1}\n            aria-labelledby=\"forceConstant\"\n            max={25}\n            step={1}\n            onChange={this.handleSliderConstant}\n            />\n            <Typography id=\"forceXY\">XY Constant Force: {this.state.forceXY}</Typography>\n            <Slider\n            value={this.state.forceXY}\n            min={0}\n            aria-labelledby=\"forceXY\"\n            max={5}\n            step={.1}\n            onChange={this.handleSliderForceXY}\n            />\n            <Typography id=\"forceManyBody\">Many Body Constant: {this.state.forceManyBody}</Typography>\n            <Slider\n            value={this.state.forceManyBody}\n            min={-150}\n            aria-labelledby=\"forceManyBody\"\n            max={150}\n            step={10}\n            onChange={this.handleSliderforceManyBody}\n            />\n            <Typography id=\"collide\">Collide: </Typography>\n            <Checkbox\n            checked={this.state.collide}\n            aria-labelledby=\"collide\"\n            onChange={this.handleCollide}\n            />\n\n            </div>}\n      </div>\n    );\n  }\n}\n\n\nexport default Explorer;\n\n\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Explorer from './Explorer'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n          <Explorer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}